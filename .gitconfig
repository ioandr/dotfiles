[web]
	browser = google-chrome

[alias]
	co = checkout

	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"

    # View a pretty git log with branch tree
	g = !git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative

    # Save a repo as a tarball
	export = archive -o latest.tar.gz -9 --prefix=latest/

    # Start a new local repository and perform initial commit
    this = !git init && git add . && git commmit -m \"Initial commit.\"

    author   = !"SEARCH=${@:-`git config user.email`}; set --; git log --format='%aN <%aE>' | uniq | grep -m 1 \"$SEARCH\""
	reviewed = !"BRANCH=${1:-master}; shift; AUTHORS=\"~/git-reviewed.sh\"; for A in \"${@:-`git config user.email`}\"; do AUTHORS=$AUTHORS\" \\\"`git author $A`\\\"\"; done; set --; git rebase -i -x \"$AUTHORS\" $BRANCH"

	# list files which have changed since REVIEW_BASE
    # (REVIEW_BASE defaults to 'develop' in my zshrc)
    files = !git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")

    # Same as the above, except specify names of files as arguments,
    # instead of opening all files:
    reviewone = !vim -p +\"tabdo Gdiff $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"	# Open all files changed since REVIEW_BASE in Vim tabs

    # Then, run fugitive's :Gdiff in each tab, and finally
	# tell vim-gitgutter to show +/- for changes since REVIEW_BASE
	review = !vim -p $(git files) +\"tabdo Gdiff $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"

    # Same as above, but with a diff stat instead of just names
    # (better for interactive use)
    stat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")

[commit]
	gpgsign = true

[tag]
	gpgsign = true

[core]
	editor = vim
	excludesfile = ~/.gitignore_global

[diff]
	tool = vimdiff

[difftool]
	prompt = false

[merge]
	tool = vimdiff

[rebase]
	autoStash = true

[pager]
	branch = false
